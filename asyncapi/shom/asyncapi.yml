asyncapi: 2.1.0
x-ballerina-event-identifier:
  type: "header"
  name: "x-shopify-topic"
info:
  title: Shopify Events API
  version: 1.0.0
  description: Webhook notifications for subscribed topics in Shopify.
  termsOfService: 'https://www.shopify.com/legal/terms'
  contact:
    name: Shopify Support
    url: 'https://help.shopify.com/en/support'
externalDocs:
  description: Shopify Webhooks documentation
  url: 'https://shopify.dev/apps/webhooks'
components:
  schemas:
    OrderEvent:
      additionalProperties: true 
      externalDocs:
        description: Common properties returned from Order Event
        url: 'https://shopify.dev/api/admin-rest/2022-04/resources/order#resource-object' 
      properties:
        id:
          type: integer
          description: The ID of the order, used for API purposes. This is different from the order_number property, which is the ID used by the shop owner and customer.
        email:
          type: string
          description: The customer's email address.
          x-nullable: true
        closed_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was closed. Returns null if the order isn't closed.
        created_at:
          type: string
          description: The autogenerated date and time (ISO 8601 format) when the order was created in Shopify. The value for this property cannot be changed.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was last modified. Filtering orders by updated_at is not an effective method for fetching orders because its value can change when no visible fields of an order have been updated. Use the Webhook and Event APIs to subscribe to order events instead.
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
        token:
          type: string
          description: A unique value when referencing the order.
        gateway:
          type: string
          description: The payment gateway used.
        test:
          type: boolean
          description: Whether this is a test order.
        total_price:
          type: string
          description: The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.
        subtotal_price:
          type: string
          description: The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
        total_tax:
          type: string
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the shop currency.
        financial_status:
          type: string
          description: The status of payments associated with the order. Can only be set when the order is created.
        confirmed:
          type: boolean
          description: Confirmation status
        total_discounts:
          type: string
          description: The total discounts applied to the price of the order in the shop currency.
        total_line_items_price:
          type: string
          description: The sum of all line item prices in the shop currency.
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
        name:
          type: string
          description: The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings. This is different from the id property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns null if the order isn't canceled.
        cancel_reason:
          type: string
          description: The reason why the order was canceled. 
        total_price_usd:
          type: string
          description: The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
        reference:
          type: string
          description: The reference where the customer clicked a link to the shop.
        user_id:
          type: integer
          description: The ID of the user logged into Shopify POS who processed the order, if applicable.
        location_id:
          type: integer
          description: The ID of the physical location where the order was processed. If you need to reference the location against an order, then use the FulfillmentOrder resource.
        source_identifier:
          type: string
          description: The source identifier
        source_url:
          type: string
          description: The source url
        processed_at:
          type: string
          description: The date and time (ISO 8601 format) when an order was processed. This value is the date that appears on your orders and that's used in the analytic reports. If you're importing orders from an app or another platform, then you can set processed_at to a date and time in the past to match when the original order was created.
        device_id:
          type: integer
          description: The device ID
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
        customer_locale:
          type: string
          description: The two or three-letter language code, optionally followed by a region modifier.
        app_id:
          type: integer
          description: The ID of the app that created the order.
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
        landing_site_ref:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
        discount_applications:
          type: array
          description: "An ordered list of stacked discount applications."
          items:
            $ref: '#/components/schemas/DiscountApplication'
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode' 
          description: A list of discounts applied to the order.
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
        processing_method:
          type: string
          description: How the payment was processed. It has the following valid values
        source_name:
          type: string
          description: "Where the order originated. Can be set only during order creation, and is not writeable afterwards. Values for Shopify channels are protected and cannot be assigned by other API clients: web, pos, shopify_draft_order, iphone, and android. Orders created via the API can be assigned any other string of your choice. If unspecified, then new orders are assigned the value of your app's ID."
        fulfillment_status:
          type: string
          description: The order's status in terms of fulfilled line items. 
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: An array of tax line objects, each of which details a tax applicable to the order. When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the taxable line items in the created order.
          x-nullable: true
        tags:
          type: string
          description: Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.
        contact_email:
          type: string
          description: The contact email address.
        order_status_url:
          type: string
          description: The URL pointing to the order status web page, if applicable.
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
        total_line_items_price_set:
          $ref: '#/components/schemas/TotalLineItemsPriceSet'
          x-nullable: true
        total_discounts_set:
          $ref: '#/components/schemas/TotalDiscountsSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/TotalShippingPriceSet'
        subtotal_price_set:
          $ref: '#/components/schemas/SubtotalPriceSet'
        total_price_set:
          $ref: '#/components/schemas/TotalPriceSet'
        total_tax_set:
          $ref: '#/components/schemas/TotalTaxSet'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem' 
          description: A list of line item objects, each containing information about an item in the order.
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment' 
          description: An array of fulfillments associated with the order. For more information, see the Fulfillment API.
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          description: A list of refunds applied to the order. For more information, see the Refund API.
        total_tip_received:
          type: string
          description: The sum of all the tips in the order in the shop currency.
        original_total_duties_set:
          $ref: '#/components/schemas/OriginalTotalDutiesSet'
        current_total_duties_set:
          $ref: '#/components/schemas/CurrentTotalDutiesSet'
        payment_terms:
          $ref: '#/components/schemas/PaymentTerms'
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID.
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: An array of objects, each of which details a shipping method used.
        billing_address:
          $ref: '#/components/schemas/CustomerAddress'
        shipping_address:
          $ref: '#/components/schemas/CustomerAddress'
        customer:
          $ref: '#/components/schemas/Customer'

    DiscountApplication:
      type: object
      properties:
        type:
          type: string
          description: "The discount application type.Valid values:manual The discount was manually applied by the merchant (for example, by using an app or creating a draft order).script: The discount was applied by a Shopify Script.discount_code: The discount was applied by a discount code. = ['discount_code', 'manual', 'script']"
        value:
          type: string
          description: The value of the discount application as a decimal. This represents the intention of the discount application
        value_type:
          type: string
          description: The type of the value = ['percentage', 'fixed_amount']
        allocation_method:
          type: string
          description: The method by which the discount application value has been allocated to entitled lines. = ['across', 'each', 'one']
        target_selection:
          type: string
          description: The lines on the order, of the type defined by target_type, that the discount is allocated over = ['all', 'entitled', 'explicit']
        target_type:
          type: string
          description: The type of line on the order that the discount is applicable on = ['line_item', 'shipping_line']
        description:
          type: string
          description: The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications 
        title:
          type: string
          description: The title of the discount application, as defined by the merchant. Available only for manual discount applications 
      description: "Stacked discount application"  
    DiscountCode:
      type: object
      properties:
        amount:
          type: string
          description: The value of the discount deducted from the order total. The type field determines how this value is calculated 
        code:
          type: string
          description: The discount code 
        type:
          type: string
          description: "The type of discount. Can be one of: percentage, shipping, fixed_amount (default) = ['fixed_amount', 'percentage', 'shipping']"
      description: Discounts applied to the order
    NoteAttribute:
      type: object
      properties:
        name:
          type: string
          description: Name
        value:
          type: string
          description: Value
      description: Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.
    TaxLine:
      type: object
      properties:
        price: 
          type: string
          description: The amount of tax to be charged in the shop currency.
        rate: 
          type: number
          description: The rate of tax to be applied.
        title: 
          type: string
          description: The name of the tax.
        channel_liable: 
          type: boolean
          description: Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for the tax line.
          x-nullable: true
      description: Tax line object, which details a tax applicable to the order.
    TotalLineItemsPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total of all line item prices in shop and presentment currencies.
    Price:
      type: object
      properties:
        amount:
          type: string
          description: The variant's price or compare-at price in the presentment currency.
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for one of the shop's enabled presentment currencies.
      description: The price object
    TotalDiscountsSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total discounts applied to the price of the order in shop and presentment currencies.
    TotalShippingPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then total_shipping_price_set includes taxes.
    SubtotalPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips.
    TotalPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total price of the order in shop and presentment currencies.
    TotalTaxSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total tax applied to the order in shop and presentment currencies.
    OrderLineItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the line item within the fulfillment.
        variant_id:
          type: integer
          description: The ID of the product variant being fulfilled.
        title:
          type: string
          description: The title of the product.
        quantity:
          type: integer
          description: The number of items in the fulfillment.
        sku:
          type: string
          description: The unique identifier of the item in the fulfillment.
        variant_title:
          type: string
          description: The title of the product variant being fulfilled.
        vendor:
          type: string
          description: The name of the supplier of the item.
        fulfillment_service:
          type: string
          description: The service provider who is doing the fulfillment. 
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment.
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order for this product variant.
        taxable:
          type: boolean
          description: Whether the line item is taxable.
        gift_card:
          type: boolean
          description: Whether the line item is a gift card
        name:
          type: string
          description: The name of the product variant.
        variant_inventory_management:
          type: string
          description: The name of the inventory management system.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          description: Any additional properties associated with the line item.
        product_exists:
          type: boolean
          description: Whether the product exists.
        fulfillable_quantity:
          type: integer
          description: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. 
        price:
          type: string
          description: The price of the item.
        price_set:
          $ref: '#/components/schemas/PriceSet'
        grams:
          type: integer
          description: The weight of the item in grams.
        total_discount:
          type: string
          description: The total of any discounts applied to the line item.
        fulfillment_status:
          type: string
          description: The status of an order in terms of the line items being fulfilled. Valid values are fulfilled, null, or partial
        fulfillment_line_item_id:
          type: integer
          description: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items.
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: A list of tax line objects, each of which details a tax applied to the item. 
        tip_payment_gateway:
          type: string
          description: The payment gateway used to tender the tip, such as shopify_payments. Present only on tips
        tip_payment_method:
          type: string
          description: The payment method used to tender the tip, such as Visa. Present only on tips.
        total_discount_set:
          $ref: '#/components/schemas/TotalDiscountSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocations'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. 
        origin_location:
          $ref: '#/components/schemas/Address'
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID
      description: "A historical record of each line item."
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The price of the line item in shop and presentment currencies.
    Property:
      type: object
      properties:
        name:
          type: string
          description: "Property name"
        value:
          type: string
          description: "Property value"
      description: Properties
    TotalDiscountSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using discount_allocations, which provides the same information.
    DiscountAllocations:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line in the shop currency.
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's  
        amount_set:
          $ref: '#/components/schemas/AmountSet'
      description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. 
    AmountSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The discount amount allocated to the line item in shop and presentment currencies.
    Address:
      type: object 
      properties:
        address1:
          type: string
          description: The customer's mailing address.
        address2:
          type: string
          description: An additional field for the customer's mailing address.
        city:
          type: string
          description: The customer's city, town, or village.
        company:
          type: string
          description: The customer's company.
        country:
          type: string
          description: The customer's country.
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
        country_name:
          type: string
          description: The customer's normalized country name.
        customer_id:
          type: integer
          description: A unique identifier for the customer.
        default:
          type: boolean
          description: Returns true for each default address.
        first_name:
          type: string
          description: The customer's first name.
        id:
          type: integer
          description: A unique identifier for the address.  
        last_name:
          type: string
          description: The customer's last name.
        name:
          type: string
          description: The customer's first and last names.
        phone:
          type: string
          description: The customer's phone number at this address.
        province:
          type: string
          description: The customer's region name. Typically a province, a state, or a prefecture.
        province_code:
          type: string
          description: The two-letter code for the customer's region.
        zip:
          type: string
          description: The customer's postal code, also known as zip, postcode, Eircode, etc.
      description: Address
    Fulfillment:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time when the fulfillment was created. The API returns this value in ISO 8601 format
        id:
          type: integer
          description: The ID for the fulfillment.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: A historical record of each item in the fulfillment.
        location_id:
          type: integer
          description: The unique identifier of the location that the fulfillment should be processed for. To find the ID of the location, use the Location resource.
        name:
          type: string
          description: "The uniquely identifying fulfillment name, consisting of two parts separated by a .. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. #1001.1, #1001.2)."
        notify_customer:
          type: string
          description: Whether the customer should be notified. If set to true, then an email will be sent when the fulfillment is created or updated. For orders that were initially created using the API, the default value is false. For all other orders, the default value is true.
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
        origin_address:
          $ref: '#/components/schemas/Address'
        receipt:
          $ref: '#/components/schemas/Receipt'
        service:
          type: string
          description: The type of service used.
        shipment_status:
          type: string
          description: The current shipment status of the fulfillment.
        status:
          type: string
          description: The status of the fulfillment. 
        tracking_company:
          type: string
          description: The name of the tracking company. 
        tracking_numbers:
          type: array
          items:
            type: string
          description: A list of tracking numbers, provided by the shipping company. 
        tracking_urls:
          type: array
          items:
            type: string
          description: The URLs of tracking pages for the fulfillment.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the fulfillment was last modified.
        variant_inventory_management:
          type: string
          description: The name of the inventory management service.
      description: You can use the Fulfillment resource to view, create, modify, or delete an order's or fulfillment order's fulfillments. A fulfillment order represents a group of one or more items in an order that are to be fulfilled from the same location. A fulfillment represents work that is completed as part of a fulfillment order and can include one or more items. You can use the Fulfillment resource to manage fulfillments for both orders and fulfillment orders.
    LineItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the line item within the fulfillment.
        variant_id:
          type: integer
          description: The ID of the product variant being fulfilled.
        title:
          type: string
          description: The title of the product.
        quantity:
          type: integer
          description: The number of items in the fulfillment.
        price:
          type: string
          description: The price of the item.
        grams:
          type: integer
          description: The weight of the item in grams.
        sku:
          type: string
          description: The unique identifier of the item in the fulfillment.
        variant_title:
          type: string
          description: The title of the product variant being fulfilled.
        vendor:
          type: string
          description: The name of the supplier of the item.
        fulfillment_service:
          type: string
          description: The service provider who is doing the fulfillment. 
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment.
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order for this product variant.
        taxable:
          type: boolean
          description: Whether the line item is taxable.
        gift_card:
          type: boolean
          description: Whether the line item is a gift card
        name:
          type: string
          description: The name of the product variant.
        variant_inventory_management:
          type: string
          description: The name of the inventory management system.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          description: Any additional properties associated with the line item.
        product_exists:
          type: boolean
          description: Whether the product exists.
        fulfillable_quantity:
          type: integer
          description: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. 
        total_discount:
          type: string
          description: The total of any discounts applied to the line item.
        fulfillment_status:
          type: string
          description: The status of an order in terms of the line items being fulfilled. Valid values are fulfilled, null, or partial
        fulfillment_line_item_id:
          type: integer
          description: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items.
        tax_lines:
          tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: A list of tax line objects, each of which details the title, price, and rate of any taxes applied to the line item.
      description: "A historical record of each item in the fulfillment."
    Receipt:
      type: object
      properties:
        testcase:
          type: boolean
          description: Whether the fulfillment was a testcase.
        authorization:
          type: string
          description: The authorization code. 
      description: A text field that provides information about the receipt
    Refund:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the refund was created.
        id:
          type: integer
          description: The unique identifier for the refund.
        note:
          type: string
          description: An optional note attached to a refund.
        order_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/OrderAdjustment'
          description: A list of order adjustments attached to the refund. Order adjustments are generated to account for refunded shipping costs and differences between calculated and actual refund amounts. 
        processed_at:
          type: string
          description: The date and time (ISO 8601 format) when the refund was imported. This value can be set to a date in the past when importing from other systems. If no value is provided, then it will be auto-generated as the current time in Shopify. Public apps need to be granted permission by Shopify to import orders with the processed_at timestamp set to a value earlier the created_at timestamp. Private apps can't be granted permission by Shopify.
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          description: A list of refunded line items.
        # transactions:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Transaction'
        #   description: A list of refunded line items.
        user_id:
          type: integer
          description: The unique identifier of the user who performed the refund.
      description: Schedule associated to the payment terms
    OrderAdjustment:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the order adjustment.
        order_id:
          type: integer
          description: The unique identifier for the order that the order adjustment is associated with.
        refund_id:
          type: integer
          description: The unique identifier for the refund that the order adjustment is associated with.
        amount:
          type: integer
          description: The value of the discrepancy between the calculated refund and the actual refund. If the kind property's value is shipping_refund, then amount returns the value of shipping charges refunded to the customer.
        tax_amount:
          type: string
          description: The taxes that are added to amount, such as applicable shipping taxes added to a shipping refund.
        kind:
          type: string
          description: The order adjustment type. Valid values are shipping_refund and refund_discrepancy.
        reason:
          type: string
          description: The reason for the order adjustment. To set this value, include discrepancy_reason when you create a refund.
      description: Order adjustment attached to the refund.
    RefundLineItem:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the line item in the refund.
        # line_item:
        #   $ref: '#/components/schemas/LineItem'
        line_item_id:
          type: integer
          description: The ID of the related line item in the order.
        quantity:
          type: integer
          description: The quantity of the associated line item that was returned.
        restock_type:
          type: string
          description: How this refund line item affects inventory levels.
        location_id:
          type: integer
          description: The unique identifier of the location where the items will be restocked. Required when restock_type has the value return or cancel.
        subtotal:
          type: number
          description: The subtotal of the refund line item.
        total_tax:
          type: number
          description: The total tax on the refund line item.
      description: Refunded line item
    OriginalTotalDutiesSet:
      type: object
      properties:
        original_total_duties_set:
          $ref: '#/components/schemas/OriginalTotalDutiesSetObject'
      description: The original total duties charged on the order in shop and presentment currencies.
    OriginalTotalDutiesSetObject:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The original total duties charged on the order in shop and presentment currencies.
    CurrentTotalDutiesSet:
      type: object
      properties:
        current_total_duties_set:
          $ref: '#/components/schemas/CurrentTotalDutiesSetObject'
      description: "The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    CurrentTotalDutiesSetObject:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    PaymentTerms:
      type: object
      properties:
        amount:
          type: integer
          description: The amount that is owed according to the payment terms.
        currency:
          type: string
          description: The presentment currency for the payment.
        payment_terms_name:
          type: string
          description: The name of the selected payment terms template for the order.
        payment_terms_type:
          type: string
          description: The type of selected payment terms template for the order.
        due_in_days:
          type: integer
          description: The number of days between the invoice date and due date that is defined in the selected payment terms template.
        payment_schedules:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSchedule'
          description: An array of schedules associated to the payment terms.
      description: The terms and conditions under which a payment should be processed.
    PaymentSchedule:
      type: object
      properties:
        amount:
          type: integer
          description: The amount that is owed according to the payment terms.
        currency:
          type: string
          description: The presentment currency for the payment.
        issued_at:
          type: string
          description: The date and time when the payment terms were initiated.
        due_at:
          type: string
          description: The date and time when the payment is due. Calculated based on issued_at and due_in_days or a customized fixed date if the type is fixed.
        completed_at:
          type: string
          description: The date and time when the purchase is completed. Returns null initially and updates when the payment is captured.
        expected_payment_method:
          type: string
          description: The name of the payment method gateway.
      description: Schedule associated to the payment terms
    ShippingLine:
      type: object
      properties:
        code:
          type: string
          description: A reference to the shipping method.
        discounted_price:
          type: string
          description: The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts.
        discounted_price_set:
          $ref: '#/components/schemas/DiscountedPriceSet'
        price:
          type: string
          description: The price of this shipping method in the shop currency. Can't be negative.
        price_set:
          $ref: '#/components/schemas/PriceSet'
        source:
          type: string
          description: The source of the shipping method.
        title:
          type: string
          description: The title of the shipping method.
        # tax_lines:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Tax_Line'
        #   description: A list of tax line objects, each of which details a tax applicable to this shipping line.
        carrier_identifier:
          type: string
          description: A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service. 
        requested_fulfillment_service_id:
          type: string
          description: A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; null otherwise. 
      description: An object, which details a shipping method used.
    DiscountedPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied.
    CustomerAddress:
      type: object 
      properties:
        address1:
          type: string
          description: The street address of the billing address.
        address2:
          type: string
          description: An optional additional field for the street address of the billing address.
        city:
          type: string
          description: The city, town, or village of the billing address.
        company:
          type: string
          description: The company of the person associated with the billing address.
        country:
          type: string
          description: The name of the country of the billing address.
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the billing address.
        first_name:
          type: string
          description: The first name of the person associated with the payment method.
        last_name:
          type: string
          description: The last name of the person associated with the payment method.
        latitude:
          type: string
          description: The latitude of the billing address.
        longitude:
          type: string
          description: The longitude of the billing address.
        name:
          type: string
          description: The full name of the person associated with the payment method.
        phone:
          type: string
          description: The phone number at the billing address.
        province:
          type: string
          description: The name of the region (for example, province, state, or prefecture) of the billing address.
        province_code:
          type: string
          description: The two-letter abbreviation of the region of the billing address.         
        zip:
          type: string
          description: The postal code (for example, zip, postcode, or Eircode) of the billing address.
      description: The mailing address associated with the payment method. This address is an optional field that won't be available on orders that do not require a payment method.
    Customer:
      type: object 
      properties:
        accepts_marketing:
          type: boolean
          description: Whether the customer has consented to receive marketing material via email.
        accepts_marketing_updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer consented or objected to receiving marketing material by email. Set this value whenever the customer consents or objects to marketing materials.
        addresses:
          type: array
          items: 
            $ref: '#/components/schemas/Address'
          description: A list of the ten most recently updated addresses for the customer.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders. 
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer was created.
        first_name:
          type: string
          description: The customer's first name.
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
        default_address:
          $ref: '#/components/schemas/Address'
        id:
          type: integer
          description: A unique identifier for the customer.
        last_name:
          type: string
          description: The customer's last name.
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the name field on the Order resource.
        metafield:
          $ref: '#/components/schemas/Metafield' 
        marketing_opt_in_level:
          type: string
          description: The marketing subscription opt-in level (as described by the M3AAWG best practices guideline) that the customer gave when they consented to receive marketing material by email. If the customer does not accept email marketing, then this property will be set to null.
        multipass_identifier:
          type: string
          description: A unique identifier for the customer that's used with Multipass login.
        note:
          type: string
          description: A note about the customer.
        orders_count:
          type: integer
          description: The number of orders associated with this customer.
        phone:
          type: string
          description: The unique phone number (E.164 format) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world.
        sms_marketing_consent:
          $ref: '#/components/schemas/Sms_marketing_consent' 
        state:
          type: string
          description: The state of the customer's account with a shop. Default value is disabled.
        tags:
          type: string
          description: Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.
        tax_exempt:
          type: boolean
          description: Whether the customer is exempt from paying taxes on their order. If true, then taxes won't be applied to an order at checkout. If false, then taxes will be applied at checkout.
        tax_exemptions:
          type: array
          items:
            type: string
          description: Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only.
        total_spent:
          type: string
          description: The total amount of money that the customer has spent across their order history.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer information was last updated.
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
      description: The Customer resource stores information about a shop's customers, such as their contact details, their order history, and whether they've agreed to receive email marketing.
    Metafield:
      type: object
      required:
      - key
      - namespace
      - value
      - value_type
      properties:
        key: 
          type: string
          description: An identifier for the metafield (maximum of 30 characters).
        namespace:
          type: string
          description: A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace.
        value:
          type: string
          description: Information to be stored as metadata.
        value_type:
          type: string
          description: The value type. Valid values are string and integer.
        description:
          type: string
          description: Additional information about the metafield.
      description: Attaches additional metadata to a shop's resources
    Sms_marketing_consent:
      type: object
      properties:
        state: 
          type: string
          description: The current SMS marketing state for the customer.
        opt_in_level: 
          type: string
          description: The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines, that the customer gave when they consented to receive marketing material by SMS.
        consent_updated_at:
          type: string
          description: The date and time at which the customer consented to receive marketing material by SMS. The customer's consent state reflects the consent record with the most recent last_consent_updated_at date. If no date is provided, then the date and time at which the consent information was sent is used.
        consent_collected_from: 
          type: string
          description: The source for whether the customer has consented to receive marketing material by SMS.
      description: The marketing consent information when the customer consented to receiving marketing material by SMS. The phone property is required to create a customer with SMS consent information and to perform an SMS update on a customer that doesn't have a phone number recorded. The customer must have a unique phone number associated to the record.
    
    CustomerEvent:
      additionalProperties: true 
      externalDocs:
        description: Common properties returned from Customer Event
        url: 'https://shopify.dev/api/admin-rest/2022-04/resources/customer#resource-object' 
      properties:
        id:
          type: integer
          description: A unique identifier for the customer.
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
        accepts_marketing:
          type: boolean
          description: Whether the customer has consented to receive marketing material via email.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer was created.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer information was last updated.
        first_name:
          type: string
          description: The customer's first name.
        last_name:
          type: string
          description: The customer's last name.
        orders_count:
          type: integer
          description: The number of orders associated with this customer.
        state:
          type: string
          description: The state of the customer's account with a shop. Default value is disabled.
        total_spent:
          type: string
          description: The total amount of money that the customer has spent across their order history.
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
        note:
          type: string
          description: A note about the customer.
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
        multipass_identifier:
          type: string
          description: A unique identifier for the customer that's used with Multipass login.
        tax_exempt:
          type: boolean
          description: Whether the customer is exempt from paying taxes on their order. If true, then taxes won't be applied to an order at checkout. If false, then taxes will be applied at checkout.
        phone:
          type: string
          description: The unique phone number (E.164 format) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world.
        tags:
          type: string
          description: Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the name field on the Order resource.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders. 
        addresses:
          type: array
          items: 
            $ref: '#/components/schemas/Address'
          description: A list of the ten most recently updated addresses for the customer.
        accepts_marketing_updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer consented or objected to receiving marketing material by email. Set this value whenever the customer consents or objects to marketing materials.
        marketing_opt_in_level:
          type: string
          description: The marketing subscription opt-in level (as described by the M3AAWG best practices guideline) that the customer gave when they consented to receive marketing material by email. If the customer does not accept email marketing, then this property will be set to null.
        sms_marketing_consent:
          $ref: '#/components/schemas/Sms_marketing_consent' 
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID
    
    ProductEvent:
      additionalProperties: true 
      externalDocs:
        description: Common properties returned from Product Event
        url: 'https://shopify.dev/api/admin-rest/2022-04/resources/product#resource-object' 
      properties:
        id:
          type: integer
          description: An unsigned 64-bit integer that's used as a unique identifier for the product. Each id is unique across the Shopify system. No two products will have the same id, even if they're from different shops.
        title:
          type: string
          description: The name of the product.
        body_html:
          type: string
          description: A description of the product. Supports HTML formatting.
        vendor:
          type: string
          description: The name of the product's vendor.
        product_type:
          type: string
          description: A categorization for the product used for filtering and searching products.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was created.
        handle:
          type: string
          description: A unique human-friendly string for the product. Automatically generated from the product's title. Used by the Liquid templating language to refer to objects.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was last modified. A product's updated_at value can change for different reasons. For example, if an order is placed for a product that has inventory tracking set up, then the inventory adjustment is counted as an update.
        published_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was published. Can be set to null to unpublish the product from the Online Store channel.
        template_suffix:
          type: string
          description: The suffix of the Liquid template used for the product page. If this property is specified, then the product page uses a template called "product.suffix.liquid", where "suffix" is the value of this property. If this property is "" or null, then the product page uses the default template "product.liquid". (default is null)
        status:
          type: string
          description: The status of the product. 
        published_scope:
          type: string
          description: Whether the product is published to the Point of Sale channel.
        tags:
          type: string
          description: A string of comma-separated tags that are used for filtering and search. A product can have up to 250 tags. Each tag can have up to 255 characters.
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          description: An array of product variants, each representing a different version of the product. The position property is read-only. The position of variants is indicated by the order in which they are listed.
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
          description: The custom product properties. For example, Size, Color, and Material. Each product can have up to 3 options and each option value can be up to 255 characters. Product variants are made of up combinations of option values. Options cannot be created without values. To create new options, a variant with an associated option value also needs to be created.
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          description: A list of product image objects, each one representing an image associated with the product.
    
    ProductVariant:
      type: object
      properties:
        barcode:
          type: string
          description: The barcode, UPC, or ISBN number for the product.
        compare_at_price:
          type: string
          description: The original price of the item before an adjustment or a sale.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the product variant was created.
        fulfillment_service:
          type: string
          description: The fulfillment service associated with the product variant. Valid values are manual or the handle of a fulfillment service.
        grams:
          type: integer
          description: The weight of the product variant in grams.
        id:
          type: integer
          description: The unique numeric identifier for the product variant.
        image_id:
          type: integer
          description: The unique numeric identifier for a product's image. The image must be associated to the same product as the variant.
        inventory_item_id:
          type: integer
          description: The unique identifier for the inventory item, which is used in the Inventory API to query for inventory information.
        inventory_management:
          type: string
          description: The fulfillment service that tracks the number of items in stock for the product variant.
        inventory_policy:
          type: string
          description: Whether customers are allowed to place an order for the product variant when it's out of stock. 
        inventory_quantity:
          type: integer
          description: An aggregate of inventory across all locations. To adjust inventory at a specific location, use the InventoryLevel resource.
        old_inventory_quantity:
          type: integer
          description: This property is deprecated. Use the InventoryLevel resource instead.
        inventory_quantity_adjustment:
          type: integer
          description: This property is deprecated. Use the InventoryLevel resource instead.
        option:
          $ref: '#/components/schemas/Option'
        presentment_prices:
          $ref: '#/components/schemas/PresentmentPrices' 
        position:
          type: integer
          description: The order of the product variant in the list of product variants. The first position in the list is 1. The position of variants is indicated by the order in which they are listed.
        price:
          type: string
          description: The price of the product variant.
        product_id:
          type: integer
          description: The unique numeric identifier for the product.
        requires_shipping:
          type: boolean
          description: This property is deprecated. Use the `requires_shipping` property on the InventoryItem resource instead.
        sku:
          type: string
          description: A unique identifier for the product variant in the shop. Required in order to connect to a FulfillmentService.
        taxable:
          type: boolean
          description: Whether a tax is charged when the product variant is sold.
        tax_code:
          type: string
          description: This parameter applies only to the stores that have the Avalara AvaTax app installed. Specifies the Avalara tax code for the product variant.
        title:
          type: string
          description: The title of the product variant. The title field is a concatenation of the option1, option2, and option3 fields. You can only update title indirectly using the option fields.
        updated_at:
          type: string
          description: The date and time when the product variant was last modified. Gets returned in ISO 8601 formatting.
        weight:
          type: integer
          description: The weight of the product variant in the unit system specified with weight_unit.
        weight_unit:
          type: string
          description: The unit of measurement that applies to the product variant's weight. If you don't specify a value for weight_unit, then the shop's default unit of measurement is applied. Valid values are g, kg, oz, and lb.
      description: A variant can be added to a Product resource to represent one version of a product with several options. The Product resource will have a variant for every possible combination of its options. Each product can have a maximum of three options and a maximum of 100 variants.
    Option:
      type: object
      properties:
        option1:
          type: string
          description: Option 1
        option2:
          type: string
          description: Option 2
        option3:
          type: string
          description: Option 3
      description: The custom properties that a shop owner uses to define product variants. You can define three options for a product variant are option1, option2, option3. Default value is Default Title. The title field is a concatenation of the option1, option2, and option3 fields. Updating the option fields updates the title field.
    PresentmentPrices:
      type: object
      properties:
        presentment_prices:
          type: array
          items: 
            $ref: '#/components/schemas/Presentment_price'
          description: A list of the variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies.
      description: The variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies. 
    Presentment_price:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        compare_at_price:
          $ref: '#/components/schemas/Price'
      description: The variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies.
    ProductOption:
      type: object
      properties:
        id:
          type: integer
          description: Product option ID
        name:
          type: string
          description: Product option name
        position:
          type: integer
          description: Product option position
        product_id:
          type: integer
          description: Product option product ID
        values:
          type: array
          items:
            type: string
          description: Product option values  
      description: The custom product properties. For example, Size, Color, and Material. Each product can have up to 3 options and each option value can be up to 255 characters.
    ProductImage:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time when the product image was created. The API returns this value in ISO 8601 formatting.
        id:
          type: integer
          description: A unique numeric identifier for the product image.
        position:
          type: integer
          description: The order of the product image in the list. The first product image is at position 1 and is the "main" image for the product.
        product_id:
          type: integer
          description: The id of the product associated with the image.
        variant_ids:
          type: array
          items:
            type: integer
          description: An array of variant ids associated with the image.
        src:
          type: string
          description: Specifies the location of the product image. This parameter supports URL filters that you can use to retrieve modified copies of the image. For example, add _small, to the filename to retrieve a scaled copy of the image at 100 x 100 px (for example, ipod-nano_small.png), or add _2048x2048 to retrieve a copy of the image constrained at 2048 x 2048 px resolution (for example, ipod-nano_2048x2048.png).
        width:
          type: integer
          description: Width dimension of the image which is determined on upload.
        height:
          type: integer
          description: Height dimension of the image which is determined on upload.
        updated_at:
          type: string
          description: The date and time when the product image was last modified. The API returns this value in ISO 8601 format.
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID.
      description: Products are easier to sell if customers can see pictures of them, which is why there are product images.  
    
    FulfillmentEvent:
      additionalProperties: true 
      externalDocs:
        description: Common properties returned from Fulfillment Events
        url: 'https://shopify.dev/api/admin-rest/2022-04/resources/fulfillment#resource-object' 
      properties:
        id:
          type: integer
          description: The ID for the fulfillment.
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
        status:
          type: string
          description: The status of the fulfillment. 
        created_at:
          type: string
          description: The date and time when the fulfillment was created. The API returns this value in ISO 8601 format
        service:
          type: string
          description: The type of service used.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the fulfillment was last modified.
        tracking_company:
          type: string
          description: The name of the tracking company. 
        shipment_status:
          type: string
          description: The current shipment status of the fulfillment.
        location_id:
          type: integer
          description: The unique identifier of the location that the fulfillment should be processed for. To find the ID of the location, use the Location resource.
        origin_address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          description: Email.
        destination:
          $ref: '#/components/schemas/Address'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: A historical record of each item in the fulfillment.
        tracking_number:
          type: string
          description: A tracking number, provided by the shipping company.
        tracking_numbers:
          type: array
          items:
            type: string
          description: A list of tracking numbers, provided by the shipping company.
        tracking_url:
          type: string
          description: The URL of tracking pages for the fulfillment. 
        tracking_urls:
          type: array
          items:
            type: string
          description: The URLs of tracking pages for the fulfillment.   
        receipt:
          $ref: '#/components/schemas/Receipt'
        name:
          type: string
          description: "The uniquely identifying fulfillment name, consisting of two parts separated by a .. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. #1001.1, #1001.2)."
        admin_graphql_api_id:
          type: string
          description: Admin GraphQL API ID.


channels:
  orders:
    subscribe:
      message:
        name: orders
        title: OrdersEvent
        oneOf:
          - x-ballerina-event-type: "orders/create"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is created.
          - x-ballerina-event-type: "orders/cancelled"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is cancelled.
          - x-ballerina-event-type: "orders/fulfilled"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is fulfilled.
          - x-ballerina-event-type: "orders/paid"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is paid.
          - x-ballerina-event-type: "orders/partially_fulfilled"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is partially fulfilled.
          - x-ballerina-event-type: "orders/updated"
            payload:
              $ref: '#/components/schemas/OrderEvent'
            summary: An order is updated.
  customers:
    subscribe:
      message:
        name: customers
        title: CustomersEvent
        oneOf:
          - x-ballerina-event-type: "customers/create"
            payload:
              $ref: '#/components/schemas/CustomerEvent'
            summary: A customer is created.
          - x-ballerina-event-type: "customers/disable"
            payload:
              $ref: '#/components/schemas/CustomerEvent'
            summary: A customer is disabled.
          - x-ballerina-event-type: "customers/enable"
            payload:
              $ref: '#/components/schemas/CustomerEvent'
            summary: A customer is enabled.
          - x-ballerina-event-type: "customers/update"
            payload:
              $ref: '#/components/schemas/CustomerEvent'
            summary: A customer is updated.
          - x-ballerina-event-type: "customers_marketing_consent/update"
            payload:
              $ref: '#/components/schemas/CustomerEvent'
            summary: Customer marketing consent is updated.
  products:
    subscribe:
      message:
        name: products
        title: ProductsEvent
        oneOf:
          - x-ballerina-event-type: "products/create"
            payload:
              $ref: '#/components/schemas/ProductEvent'
            summary: A product is created.
          - x-ballerina-event-type: "products/update"
            payload:
              $ref: '#/components/schemas/ProductEvent'
            summary: A product is updated.
  fulfillments:
    subscribe:
      message:
        name: fulfillments
        title: FulfillmentsEvent
        oneOf:
          - x-ballerina-event-type: "fulfillments/create"
            payload:
              $ref: '#/components/schemas/FulfillmentEvent'
            summary: A fulfillment is created.
          - x-ballerina-event-type: "fulfillments/update"
            payload:
              $ref: '#/components/schemas/FulfillmentEvent'
            summary: A fulfillment is updated.
